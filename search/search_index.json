{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DSC 650 \u00b6 Big Data Overview \u00b6","title":"Home"},{"location":"#dsc-650","text":"Big Data","title":"DSC 650"},{"location":"#overview","text":"","title":"Overview"},{"location":"data-sources/","text":"Data Sources \u00b6 This repository contains data from multiple sources. These sources released made this data available under permissive licenses including the Creative Commons . This data is used for educational purposes only. 538 The New York Times R for Data Science Tidynomicon","title":"Data Sources"},{"location":"data-sources/#data-sources","text":"This repository contains data from multiple sources. These sources released made this data available under permissive licenses including the Creative Commons . This data is used for educational purposes only. 538 The New York Times R for Data Science Tidynomicon","title":"Data Sources"},{"location":"latency-numbers/","text":"Latency Numbers Every Data Scientist Should Know \u00b6 In the 2000s, Jeff Dean, a Google Senior Fellow in their Research Group, presented a list of latency numbers that every programmer should know . These numbers describe how long it takes to perform certain actions within distributed programs. Since then, it has been updated and expanded upon . Below is yet another update on these numbers with data taken from Colin Scott , a Berkeley researcher. An interactive version of this repository can be found here . L1 cache reference 1 ns Branch mispredict 3 ns L2 cache reference 4 ns Mutex lock/unlock 17 ns Main memory reference 100 ns Compress 1KB with Zippy 2,000 ns 2 \u03bcs Send 1KB over 1 Gbps network 10,000 ns 10 \u03bcs SSD random read 16,000 ns 16 \u03bcs Read 1 MB sequentially from SSD 49,000 ns 49 \u03bcs Read 1 MB sequentially from memory 250,000 ns 250 \u03bcs Round trip within same datacenter 500,000 ns 500 \u03bcs Read 1 MB sequentially from disk 825,000 ns 825 \u03bcs Disk seek 2,000,000 ns 2,000 \u03bcs 2 ms Send packet CA->Netherlands->CA 150,000,000 ns 150,000 \u03bcs 150 ms Notes 1 ns = 10 -9 seconds 1 \u03bcs = 10 -6 seconds = 1,000 ns 1 ms = 10 -3 seconds = 1,000 \u03bcs = 1,000,000 ns","title":"Latency Numbers"},{"location":"latency-numbers/#latency-numbers-every-data-scientist-should-know","text":"In the 2000s, Jeff Dean, a Google Senior Fellow in their Research Group, presented a list of latency numbers that every programmer should know . These numbers describe how long it takes to perform certain actions within distributed programs. Since then, it has been updated and expanded upon . Below is yet another update on these numbers with data taken from Colin Scott , a Berkeley researcher. An interactive version of this repository can be found here . L1 cache reference 1 ns Branch mispredict 3 ns L2 cache reference 4 ns Mutex lock/unlock 17 ns Main memory reference 100 ns Compress 1KB with Zippy 2,000 ns 2 \u03bcs Send 1KB over 1 Gbps network 10,000 ns 10 \u03bcs SSD random read 16,000 ns 16 \u03bcs Read 1 MB sequentially from SSD 49,000 ns 49 \u03bcs Read 1 MB sequentially from memory 250,000 ns 250 \u03bcs Round trip within same datacenter 500,000 ns 500 \u03bcs Read 1 MB sequentially from disk 825,000 ns 825 \u03bcs Disk seek 2,000,000 ns 2,000 \u03bcs 2 ms Send packet CA->Netherlands->CA 150,000,000 ns 150,000 \u03bcs 150 ms Notes 1 ns = 10 -9 seconds 1 \u03bcs = 10 -6 seconds = 1,000 ns 1 ms = 10 -3 seconds = 1,000 \u03bcs = 1,000,000 ns","title":"Latency Numbers Every Data Scientist Should Know"}]}